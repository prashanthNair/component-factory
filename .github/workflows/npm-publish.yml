name: NPM Publish
options:
  timestamps: true

on:
  push:
    branches:
      - develop

jobs:
  npm-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Update npm
        run: npm install -g npm@latest
      - name: Authenticate with NPM
        run: npm adduser --registry=https://registry.npmjs.org/ --loglevel verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      # - name: Install dependencies and Build
      #   run: |
      #     npm cache clean --force
      #     npm ci --legacy-peer-deps
      #     npm run build

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
# trigger-deployment:
#   runs-on: ubuntu-latest
#   needs: npm-publish
#   steps:
#     - name: Trigger Deployment Of Authoring
#       uses: actions/github-script@v5
#       with:
#         github-token: ${{ secrets.GITHUB_TOKEN }}
#         script: |
#           const { context, GitHub } = require('github-script');
#           const github = new GitHub(process.env.GITHUB_TOKEN);

#           const owner = 'hcl-x';
#           const repo = 'hep-authoring-ui';
#           const branch = 'mavericks_dev';

#           // Get the workflow ID for the target repository and workflow
#           const workflowResponse = await github.actions.listRepoWorkflows({
#             owner: owner,
#             repo: repo,
#           });

#           const workflow = workflowResponse.data.workflows.find(w => w.name === 'deploy-all.yaml');

#           if (workflow) {
#             // Trigger the workflow for the specified branch
#             await github.actions.createWorkflowDispatch({
#               owner: owner,
#               repo: repo,
#               workflow_id: workflow.id,
#               ref: branch,
#             });
#           } else {
#             console.log('Workflow not found.');
#           }
